Basic algorithms for searching a graph:
	
	In a graph, there will be vertexes A through J. Visited vertexes will be in red, and adjacent verticies to the nodes which have already been visited are in blue. Adjacent vertices are stored in a FIFO queue
	to accurately keep track of vertices which we need to traverse. Breadth first search traverses all adjacent nodes before moving onto another node. Any adjacent node(s) are stored in the queue and traversed 
	in the order of nodes stored in the queue. 

	BFS tries to reach vertices as soon as possible. DFS tries to go as far as possible before looking at alternatives. BFS uses a FIFO queue. DFS uses a FILO stack. 

	Depth-first search in-class exercise:
		My solution
		Does not go in alphabetical order: A -> B -> E -> G -> I -> H -> J -> F -> D -> C

		Visited, discovered, rediscovered, 